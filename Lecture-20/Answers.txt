Задача 1
Посмотрите на сценарий ниже и ответьте на вопрос: "Подходит ли в этом сценарии использование докера? Или лучше подойдет виртуальная машина, физическая машина? Или возможны разные варианты?"
Детально опишите и обоснуйте свой выбор.
--

Так как быстродействие контейнера близко к нативному, априори будем считать, что все, что возможно запустить в виртуалке, будет работать быстрее в контейнере.
Также не удалось найти никаких причин не деплоить в контейнеры указанные сервисы\приложения. Для большинства есть уже готовые образы (как официальные так и от "сообщества"). Также, любое *-приложение будет гораздо быстрее и удобнее масштабировать и балансировать в кластере контейнеров, нежели bare metal машин или виртуалок.
Для разных "стэков" опять же удобнее использовать docker, где можно в одном compose-файле описать все ноды\сервисы и "отношения" между ними.
Естественно, все данные мы выносим за пределы контейнера в persistent volumes.

Сценарий:
Высоконагруженное монолитное java веб-приложение;
Да, скорее всего можно, в кластерной конфигурации (Swarm/Kubernetes/etc).

Go-микросервис для генерации отчетов;
Да, docker идеально подходит для микросервисов.

Nodejs веб-приложение;
Да

Мобильное приложение c версиями для Android и iOS;
Да

База данных postgresql используемая, как кэш;
Да

Шина данных на базе Apache Kafka;
Да

Очередь для Logstash на базе Redis;
Да

Elastic stack для реализации логирования продуктивного веб-приложения - три ноды elasticsearch, два logstash и две ноды kibana;
Да

Мониторинг-стек на базе prometheus и grafana;
Да

Mongodb, как основное хранилище данных для java-приложения;
Да

Jenkins-сервер.
Да



Задача 2
Сценарий выполения задачи:
создайте свой репозиторий на докерхаб;
выберете любой образ, который содержит апачи веб-сервер;
создайте свой форк образа;
реализуйте функциональность: запуск веб-сервера в фоне с индекс-страницей, содержащей HTML-код ниже:
<html>
    <head>
    Hey, Netology
    </head>
    <body>
        <h1>I'm kinda DevOps now</h1>
    </body>
</html>
Опубликуйте созданный форк в своем репозитории и предоставьте ответ в виде ссылки на докерхаб-репо.

https://hub.docker.com/r/electricdrop/httpd



Задача 3
Запустите первый контейнер из образа centos c любым тэгом в фоновом режиме, подключив папку info из текущей рабочей директории на хостовой машине в /share/info контейнера;
Запустите второй контейнер из образа debian:latest в фоновом режиме, подключив папку info из текущей рабочей директории на хостовой машине в /info контейнера;
Подключитесь к первому контейнеру с помощью exec и создайте текстовый файл любого содержания в /share/info ;
Добавьте еще один файл в папку info на хостовой машине;
Подключитесь во второй контейнер и отобразите листинг и содержание файлов в /info контейнера.

docker container run -d -i --name centos -v /c/Users/elect/Projects/netology-devops/Lecture-20/info:/share/info centos
docker container run -d -i --name debian -v /c/Users/elect/Projects/netology-devops/Lecture-20/info:/share/info debian

docker exec -it centos bash
echo "This is a test file made in CentOS container" > /share/info/test-centos

docker exec -it debian bash
cat /share/info/test-centos
cat /share/info/test-host
