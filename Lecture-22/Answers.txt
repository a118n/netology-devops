Задача 1
Архитектор ПО решил проконсультироваться у вас, какой тип БД лучше выбрать для хранения определенных данных.
Он вам предоставил следующие типы сущностей, которые нужно будет хранить в БД:
Электронные чеки в json виде
PostgreSQL / MongoDB

Склады и автомобильные дороги для логистической компании
PostgreSQL / MongoDB

Генеалогические деревья
PostgreSQL / MongoDB

Кэш идентификаторов клиентов с ограниченным временем жизни для движка аутенфикации
Redis/Memcached

Отношения клиент-покупка для интернет-магазина
PostgreSQL

Выберите подходящие типы СУБД для каждой сущности и объясните свой выбор.

Но тут еще нужно учесть, что в 99.9% случаев выбор скорее всего будет за наиболее распространенными БД, ибо поддерживать всякие эзотерические и узкоспециализированные решения довольно трудозатратно, да и не особо оправдано. Поэтому я бы выбрал либо PostgreSQL, как самый продвинутый из линейки (и беплатный), либо MongoDB.


Задача 2
Вы создали распределенное высоконагруженное приложение и хотите классифицировать его согласно CAP-теореме. Какой классификации по CAP-теореме соответствует ваша система, если:
Данные записываются на все узлы с задержкой до часа (асинхронная запись)
При сетевых сбоях, система может разделиться на 2 раздельных кластера
Система может не прислать корректный ответ или сбросить соединение
А согласно PACELC-теореме, как бы вы классифицировали данные системы?

Скорее всего PA / EL.


Задача 3
Могут ли в одной системе сочетаться принципы BASE и ACID? Почему?
Нет, т.к. это противоположные принципы с разными подходами к записи и хранению данных.


Задача 4
Вам дали задачу написать системное решение, основой которого бы послужили:
фиксация некоторых значений с временем жизни
реакция на истечение таймаута
Вы слышали о key-value хранилище, которое поддерживает хранение key-value значений и имеет механизм Pub/Sub. Что это за система? Какие минусы выбора данной системы?

Речь видимо про Redis? Из минусов - нет автовыбора мастер реплики, все данные хранятся в оперативке.
