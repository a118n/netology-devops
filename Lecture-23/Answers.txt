Задача 1
Используя docker поднимите инстанс PostgreSQL (версию 12) c 2 volume, в который будут складываться данные БД и бэкапы.
Приведите получившуюся команду или docker-compose манифест.


docker run -d -e POSTGRES_PASSWORD=password -v postgres-db:/var/lib/postgresql/data -v postgres-backup:/var/lib/postgresql/backup --name postgres postgres:12
docker exec -it postgres bash
su - postgres
psql



Задача 2
В БД из задачи 1:
создайте пользователя test-admin-user и БД test_db
в БД test_db создайте таблицу orders и clients (спeцификация таблиц ниже)
предоставьте привилегии на все операции пользователю test-admin-user на таблицы БД test_db
создайте пользователя test-simple-user
предоставьте пользователю test-simple-user права на SELECT/INSERT/UPDATE/DELETE данных таблиц БД test_db
Таблица orders:
id (serial primary key)
наименование (string)
цена (integer)
Таблица clients:
id (serial primary key)
фамилия (string)
страна проживания (string, index)
заказ (foreign key orders)
Приведите:
итоговый список БД после выполнения пунктов выше,
описание таблиц (describe)
SQL-запрос для выдачи списка пользователей с правами над таблицами test_db
список пользователей с правами над таблицами test_db


create database test_db;
create user "test-admin-user";
create user "test-simple-user";

\c test_db

create table orders(
    id int primary key generated always as identity,
    name text not null,
    price int
);
create table clients(
    id int primary key generated always as identity,
    name text not null,
    country text not null,
    order_id int references orders(id)
);
create index clients_country on clients (country);

grant all privileges on orders,clients to "test-admin-user";
grant select,insert,update,delete on orders,clients to "test-simple-user";

\l+
\d+ orders
\d+ clients
\z
SELECT grantor, grantee, table_schema, table_name, privilege_type FROM information_schema.table_privileges WHERE grantee = 'test-admin-user';
SELECT grantor, grantee, table_schema, table_name, privilege_type FROM information_schema.table_privileges WHERE grantee = 'test-simple-user';



Задача 3
Используя SQL синтаксис - наполните таблицы следующими тестовыми данными:
Таблица orders
Наименование	цена
Шоколад	10
Принтер	3000
Книга	500
Монитор	7000
Гитара	4000
Таблица clients
ФИО	Страна проживания
Иванов Иван Иванович	USA
Петров Петр Петрович	Canada
Иоганн Себастьян Бах	Japan
Ронни Джеймс Дио	Russia
Ritchie Blackmore	Russia
Используя SQL синтаксис:
вычислите количество записей для каждой таблицы
приведите в ответе:
запросы
результаты их выполнения.


insert into orders (name,price) values ('Шоколад',10),('Принтер',3000),('Книга',500),('Монитор',7000),('Гитара',4000);
insert into clients (name,country) values ('Иванов Иван Иванович','USA'),('Петров Петр Петрович','Canada'),('Иоганн Себастьян Бах','Japan'),('Ронни Джеймс Дио','Russia'),('Ritchie Blackmore','Russia');
select count(*) from clients;
select count(*) from orders;

Задача 4
Часть пользователей из таблицы clients решили оформить заказы из таблицы orders.
Используя foreign keys свяжите записи из таблиц, согласно таблице:
ФИО	Заказ
Иванов Иван Иванович	Книга
Петров Петр Петрович	Монитор
Иоганн Себастьян Бах	Гитара
Приведите SQL-запросы для выполнения данных операций.
Приведите SQL-запрос для выдачи всех пользователей, которые совершили заказ, а также вывод данного запроса.
Подсказка - используйте директиву UPDATE.


UPDATE clients SET order_id = 3 WHERE id = 1;
UPDATE clients SET order_id = 4 WHERE id = 2;
UPDATE clients SET order_id = 5 WHERE id = 3;


Задача 5
Получите полную информацию по выполнению запроса выдачи всех пользователей из задачи 4 (используя директиву EXPLAIN).
Приведите получившийся результат и объясните что значат полученные значения.

explain select * from clients where order_id is not null;
                        QUERY PLAN
-----------------------------------------------------------
 Seq Scan on clients  (cost=0.00..18.10 rows=806 width=72)
   Filter: (order_id IS NOT NULL)
(2 rows)

При выполнении данного запроса будет осуществлено последовательное сканирование БД с фильтром order_id IS NOT NULL с начальной стоимостью от 0.00 (затраты на получение первых результатов) и полной до 18.10 (затраты на получение всех результатов).
rows — приблизительное количество возвращаемых строк при последовательном сканировании (Seq Scan).
width — средний размер одной строки в байтах


Задача 6
Создайте бэкап БД test_db и поместите его в volume, предназначенный для бэкапов (см. Задачу 1).
Остановите контейнер с PostgreSQL (но не удаляйте volumes).
Поднимите новый пустой контейнер с PostgreSQL.
Восстановите БД test_db в новом контейнере.
Приведите список операций, который вы применяли для бэкапа данных и восстановления.


cd /var/lib/postgresql/backup
pg_dump -U postgres test_db > backup_13112020
docker container stop postgres
docker container rm postgres
docker volume rm posgres-db
docker run -d -e POSTGRES_PASSWORD=password -v postgres-db:/var/lib/postgresql/data -v postgres-backup:/var/lib/postgresql/backup --name postgres postgres:12
docker exec -it postgres bash
su - postgres
psql
create table test_db;
(Ctrl+D)
cd /var/lib/postgresql/backup
psql test_db < backup_13112020
